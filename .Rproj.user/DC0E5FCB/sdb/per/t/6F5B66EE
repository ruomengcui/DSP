{
    "contents" : "plot.Impulse.Responses<-function(A, strip.text.labels, file.name, interquartile=1, tick=.5){\n\tstats=array(dim=c(4, dim(A)[1:3]))\n\tstats[1,,,]=apply(A, 1:3, mean)\n\tstats[2:4,,,]=apply(A, 1:3, quantile, probs=c(.5, .25, .75))\n\td=data.frame(melt(stats, varnames=c(\"stat\", \"m\", \"n\", \"est\")))\n\td$stat<-as.factor(d$stat)\n\td$est<-as.factor(d$est)\n\td$n<-as.factor(d$n)\n\tlevels(d$stat)<-c('Mean', 'Median', 'Q1', 'Q3')\n\tif(!interquartile) d=d[d$stat%in%c('Mean', 'Median')\t,]\n\tlevels(d$est)<-strip.text.labels\n\tlevels(d$n)<-c('n==0', 'n==1', 'n==2', 'n==3', 'n==4', 'n==5', 'n==6', 'n==7')\n\td$m=d$m-1\n\td$stat<-factor(d$stat)\n\tp<-ggplot(d, aes(x=m, y=value, colour=stat)) +geom_line()+ geom_hline(aes(yintercept=0), size=.1) +facet_grid(n~est, labeller = label_parsed)+opts(legend.title = theme_text(size = 0))+ scale_y_continuous(expression(paste(\"Matrix's \", mn^\"th\", \" element\")), breaks=seq(-100,100,tick))+opts(axis.text.y=theme_text(size=10), axis.text.x=theme_text(size = 11), strip.text.y=theme_text(size = 15, angle=-90), strip.text.x=theme_text(size = 15), axis.title.x=theme_text(size = 16), axis.title.y=theme_text(size = 16, angle=90), legend.text=theme_text(size = 13), panel.background=theme_rect(colour=\"lightgrey\"))+scale_colour_grey(end=0.7,start=0)\n\tggsave(paste(finalOuts, \"impulse_responses/\", file.name, \".png\", sep=\"\"),  dpi=300)\n}\n\nplot.Inventory.IRFs<-function(A){\n\tk=dim(A)[1]\n\tavg.IRF=apply(A, c(1,2,3), mean)[,,1]\n\tinv.IRFs<-function(x){ \n\t\tIRFs=array(dim=c(k,k,2))\n\t\tIRFs[,,1]=makeC(k)%*%(A[,,1,x]-diag(k))\n\t\tIRFs[,,2]=makeC(k)%*%(avg.IRF-diag(k))%*%A[,,1,x]\n\t\tIRFs\n\t}\t\t\n\tM=vapply(seq(dim(A)[4]), inv.IRFs, array(0,dim=c(k,k,2)))\n\tplot.Impulse.Responses(M,  c(expression(paste(\"C(\", D^L, widehat(A), \"-I)\")), expression(paste(\"C(\", D^L[s], bar(A), \"-I)\", widehat(A)))), \"inv\", interquartile=0, tick=.25)\n}\n\nplot.Cov.Matricies<-function(d, fourier=0){\n\tstats=array(dim=c(2, 2, dim(d[[1]]$S)))\n\tif(fourier){\n\t\tF=get.fourier.matrix(dim(d[[1]]$S)[1])\n\t\tGamma=vapply(d, function(s) F%*%s$S%*%Conj(F), F)\n\t\tXi=vapply(d, function(s) F%*%s$Lambda[,,2]%*%Conj(F), F)\n\t\tstats[1,1,,]=apply(Re(Gamma), c(1,2), quantile, probs=c(.5))\n\t\tstats[1,2,,]=apply(Im(Gamma), c(1,2), quantile, probs=c(.5))\t\n\t\tstats[2,1,,]=apply(Re(Xi), c(1,2), quantile, probs=c(.5))\n\t\tstats[2,2,,]=apply(Im(Xi), c(1,2), quantile, probs=c(.5))\n\t\tmy.labs=c(expression(widehat(Gamma)), expression(widehat(Xi)))\n\t\tmy.labs2=c(\"Real\",\"Imaginary\")\n\t\tmy.out=\"covmat_fourier\"\n\t}else{\n\t\tS=vapply(d, function(s) s$S, d[[1]]$S)\n\t\tLambda=vapply(d, function(s) s$Lambda[,,2], d[[1]]$Lambda[,,2])\n\t\tstats[1,1,,]=apply(S, c(1,2), mean)\n\t\tstats[1,2,,]=apply(S, c(1,2), quantile, probs=c(.5))\t\n\t\tstats[2,1,,]=apply(Lambda, c(1,2), mean)\n\t\tstats[2,2,,]=apply(Lambda, c(1,2), quantile, probs=c(.5))\n\t\tmy.labs=c(expression(widehat(Sigma)), expression(widehat(Lambda)))\n\t\tmy.labs2=c('Mean', 'Median')\n\t\tmy.out=\"covmats\"\n\t}\n\td=data.frame(melt(stats, varnames=c(\"est\", \"stat\", \"m\", \"n\")))\n\td$stat<-as.factor(d$stat)\n\td$est<-as.factor(d$est)\n\td$n<-as.factor(d$n)\n\tlevels(d$est)<-my.labs\n\tlevels(d$stat)<-my.labs2\n\tlevels(d$n)<-c('n==0', 'n==1', 'n==2', 'n==3', 'n==4', 'n==5', 'n==6', 'n==7')\n\td$m=d$m-1\n\tp<-ggplot(d, aes(x=m, y=value, colour=stat)) +geom_line() +facet_grid(n~est, labeller = label_parsed)+opts(legend.title = theme_text(size = 0))+ scale_y_continuous(expression(paste(\"Matrix's \", mn^\"th\", \" element\")), breaks=seq(0,50, 10))+opts(axis.text.y=theme_text(size=10), axis.text.x=theme_text(size = 11), strip.text.y=theme_text(size = 15, angle=-90), strip.text.x=theme_text(size = 15), axis.title.x=theme_text(size = 16), axis.title.y=theme_text(size = 16, angle=90), legend.text=theme_text(size = 13), panel.background=theme_rect(colour=\"lightgrey\"))+scale_colour_grey(end=0.7,start=0)\n\tggsave(paste(finalOuts, \"impulse_responses/\", my.out, \".png\", sep=\"\"),  dpi=300)\n}\n\nplot.freq.IRF<-function(H=8){\n\tS=diag(H); Lambda=array(0, dim=c(H,H)); C=makeC(H); W=get.fourier.matrix(H)\n\tcases=t(matrix(c(0,0,  0.001,1,  0.001,2,  1,0,  2,0,  1,1,  2,2), nr=2))\n\td=vapply(seq(dim(cases)[1]), function(x) W%*%solve.for.A(cases[x,], S, Lambda)$A%*%Conj(W), array(complex(r=0, i=0), dim=c(H,H)))\n\tcases=floor(cases)\n\tr=melt(Re(d), varnames=c(\"m\", \"n\", \"a.b\"))\n\ti=melt(Im(d), varnames=c(\"m\", \"n\", \"a.b\"))\n\tnames(r)[which(names(r)==\"value\")]=\"Real\"\n\tnames(i)[which(names(i)==\"value\")]=\"Imaginary\"\n\td=merge(r, i)\n\td=melt(d, id.vars=c(\"m\", \"n\", \"a.b\"))\n\td$m=d$m-1; d$n=d$n-1\n\td=d[d$n<=H/2,]\n\td$n=as.factor(d$n)\n\tlevels(d$n)<-c('n==0', 'n==1', 'n==2', 'n==3', 'n==4', 'n==5', 'n==6', 'n==7')\n\td$a.b=as.factor(d$a.b)\n\tlevels(d$a.b)=vapply(seq(dim(cases)[1]), function(x) paste(expression(alpha),\"==\", cases[x,2], \"~\", expression(beta),\"==\", cases[x,1]), \"\")\n\td$variable=factor(d$variable, levels=c(\"Real\", \"Imaginary\"))\n\tp<-ggplot(d, aes(x=m, y=value, colour=variable))+geom_line() +facet_grid(n~a.b, labeller = label_parsed)+opts(legend.title = theme_text(size = 0),legend.text = theme_text(size = 9),legend.position=c(.87,.56))+ scale_y_continuous(expression(paste(\"Matrix's \", mn^\"th\", \" element\")), breaks=c(0,1))+opts(axis.text.y=theme_text(size=10), axis.text.x=theme_text(size = 10), strip.text.y=theme_text(size = 11, angle=-90), strip.text.x=theme_text(size = 10), axis.title.x=theme_text(size = 13), axis.title.y=theme_text(size = 13, angle=90), panel.background=theme_rect(colour=\"lightgrey\"))+scale_colour_grey(end=0.7,start=0)\n\tggsave(paste(finalOuts, \"impulse_responses/freqIRF.png\", sep=\"\"),  dpi=300)\n}\n\nplot.freq.vars<-function(H=20){\n\tget.freq.vars<-function(H, a.b){\n\t\tS=diag(H); Lambda=array(0, dim=c(H,H)); C=makeC(H); J=array(0, dim=c(H,H)); J[1,1]=1; W=get.fourier.matrix(H)\n\t\tA=solve.for.A(c(a.b[2], a.b[1]), S, Lambda)$A\n\t\tM=W%*%A%*%Conj(W)\n\t\tfreq.l.vars<-function(l){\n\t\t\tgamma=array(0, dim=c(H,H)); gamma[l,l]=1\n\t\t\tgamma.o=M%*%gamma%*%Conj(t(M))\n\t\t\tgamma.i=W%*%C%*%Conj(W)%*%(M-diag(H))%*%gamma%*%t(Conj(M)-diag(H))%*%W%*%t(C)%*%Conj(W)\n\t\t\tgamma.j=W%*%J%*%Conj(W)%*%M%*%gamma%*%t(Conj(M))%*%W%*%J%*%Conj(W)\n\t\t\tc(a.b, l-1, Re(sum(diag(gamma.o))), Re(sum(diag(gamma.i))), Re(sum(diag(gamma.j))))\n\t\t}\t\n\t\tt(vapply(seq(H), freq.l.vars, rep(0,6)))\n\t}\n\tcases=expand.grid(c(.1, .5, 1), c(.1, 1, 2))\n\tg=do.call(rbind, lapply(seq(dim(cases)[1]), function(x) get.freq.vars(H, as.numeric(cases[x,]))))\n\tcolnames(g)<-c(\"a\", \"b\", \"frequency\", \"vo\", \"vi\", \"vm\")\n\tg=as.data.frame(g)\n\tg$a=paste(expression(alpha), \"==\", g$a); g$b=paste(expression(beta), \"==\", g$b)\n\tg$vm=(H-.1)*g$vm\n\tg=g[g$frequency<=H/2,]\n\tg=melt(g, id.vars=c(\"a\", \"b\", \"frequency\"))\n\tmy.labs<-list(bquote(paste(o[t],\":                                  \",MJ[l], M^\"*'\")), bquote(paste(i[t],\": \", WCW^\"*\",\"(\",M-I,\")\",J[l],\"(\",M^\"*'\",-I,\")\",WC^\"'\",W^\"*\")),bquote(paste(i[t]^m,\":          \",HWJ[1],W^\"*\",MJ[l],M^\"*'\",WJ[1],W^\"*\")))\n\tlevels(g$variable)=0:2\n\tp<-ggplot(g, aes(frequency, value, colour=variable))+geom_line() +facet_grid(b~a, labeller = label_parsed)+geom_point()+labs(x=\"Frequency l\", y=\"\")+opts(legend.position=c(.8,.8), legend.title = theme_text(size = 0),legend.text = theme_text(size = 8),panel.background=theme_rect(colour=\"lightgrey\", size=1), panel.background = theme_rect(colour=NA))+scale_colour_manual(values=c(\"0\"=\"black\",\"1\"=\"darkgrey\",\"2\"=\"lightgrey\"), breaks=0:2, labels=my.labs)\n\tggsave(paste(finalOuts, \"freq/freqvars.png\", sep=\"\"),  dpi=300)\n}\n\nplot.Inventory.deviations<-function(A){\n\tk=dim(A)[1]\n\tinv.IRFs<-function(x){ \n\t\tIRFs=makeC(k)%*%(A[,,1,x]-diag(k))\n\t}\t\t\n\tinvIRF=vapply(seq(dim(A)[4]), inv.IRFs, array(0,dim=c(k,k)))\n\tavg.IRF=apply(invIRF, c(1,2), mean)\n\tS=vapply(f.0, function(s) s$S, f.0[[1]]$S)\n\tavg.S=apply(S, c(1,2), mean)\n\tinv.diviations=abs(avg.IRF%*%mat.sqrt(avg.S)%*%matrix(rnorm(80000), 8))\n\tstats=array(dim=c(4, 8))\n\tstats[1,]=apply(inv.diviations, 1, mean)\n\tstats[2:4,]=apply(inv.diviations, 1, quantile, probs=c(.5, .25, .75))\n\td=data.frame(melt(stats, varnames=c(\"stat\", \"x\")))\n\td$stat=as.factor(d$stat)\n\tlevels(d$stat)<-c('Mean', 'Median', 'Q1', 'Q3')\n\td$x=d$x-1\n\tp<-ggplot(d, aes(x=x, y=value, colour=stat)) +geom_line()+opts(legend.title = theme_text(size = 0))+scale_y_continuous(expression(paste(\"|\", e[l],\"'\",epsilon[t]^i,\"|\",)))+scale_x_continuous(\"Lead time l\")+opts(axis.text.y=theme_text(size=10), axis.text.x=theme_text(size = 11), strip.text.y=theme_text(size = 15, angle=-90), strip.text.x=theme_text(size = 15), axis.title.x=theme_text(size = 16), axis.title.y=theme_text(size = 16, angle=90), legend.text=theme_text(size = 13), panel.background=theme_rect(colour=\"lightgrey\"))+scale_colour_grey(end=0.7,start=0)\n\tggsave(paste(finalOuts, \"impulse_responses/deviations.png\", sep=\"\"),  dpi=300)\n}\n\nplot.BwBreakdown<-function(){\n\tS=vapply(f.0, function(s) s$S, f.0[[1]]$S)\n\tLambda=vapply(f.0, function(s) s$Lambda[,,2], f.0[[1]]$Lambda[,,2])\n\td=t(vapply(seq(length(f.0)), function(x){ dsp=sum(diag(A.0[,,1,x]%*%S[,,x]%*%t(A.0[,,1,x])-S[,,x])); noise=sum(diag(Lambda[,,x])); c(dsp, noise)}, c(0,0)))\n\td=as.data.frame(pmax(pmin(d, 100), -50))\n\td$noisy[d$V2>d$V1]<-1; d$noisy[d$V2<=d$V1]<-0\n\td$noisy=as.factor(d$noisy)\n\tmy.labs <- list(bquote(paste(widehat(B)[\"SA\"],\">\",widehat(B)[\"NC\"])),bquote(paste(widehat(B)[\"SA\"]<=widehat(B)[\"NC\"])))\n\tggplot(d, aes(y=V2, x=V1, colour=noisy))+geom_point()+scale_colour_manual(values=c(\"0\"=\"black\",\"1\"=\"lightgrey\"),breaks=0:1, labels=my.labs)+opts(legend.position=c(.85,.9), legend.title = theme_text(size =0), legend.text = theme_text(size = 14), axis.title.x=theme_text(size = 20),axis.title.y=theme_text(size = 20, angle=90),axis.text.x=theme_text(size = 16),axis.text.y=theme_text(size = 16),panel.background=theme_rect(colour=NA))+coord_cartesian(ylim=c(-2,102), xlim=c(-52,52))+labs(y=expression(widehat(B)[\"NC\"]), x=expression(widehat(B)[\"SA\"]))+scale_x_continuous(breaks=seq(-50,50,25))+scale_y_continuous(breaks=seq(0,100,25))\t\n\tggsave(paste(finalOuts, \"RcaseStudies/BwBreakdown.png\", sep=\"\"),  dpi=300)\n}\n\nplot.metrics<-function(m){\t\n\tm=melt(m, id.var = c('id.key', 'sic'))\n\tm=m[m$variable%in%c(\"adh1\", \"prod\"),]\t\n\tm$variable<-factor(m$variable, levels=c(\"adh1\", \"prod\"))\n\tm$sic=as.factor(floor(m$sic/100))\n\tm=wins(m, \"value\", c(\"variable\"), q=c(0, .92))\n\tm=wins(m, \"value\", c(\"sic\", \"variable\"), q=c(.1, .9))\n\tm=normalize(m, INDICIES=m$variable)\n\tm[m$variable==\"adh1\",\"value\"]=1-m[m$variable==\"adh1\",\"value\"]\n\tprint(multicol.unique(m, c(3,5)))\n\tlevels(m$variable)<-c('Plan Adherence', 'Production  Stability')\n\tf<-function(x) {\n\t\tr<-quantile(x, probs = c(0.1, 0.25, 0.5, 0.75, 0.9))\n\t\tnames(r)<-c(\"ymin\", \"lower\", \"middle\", \"upper\", \"ymax\")\n\t\tr\n\t}\n\tm$temp=\"\"\n\tm=merge(m, get.sic.labels())\n\tggplot(m, aes(x=sic.label, y=value)) + stat_summary(fun.data = f, geom=\"boxplot\")+ facet_grid(temp~variable, scales=\"free\")+coord_flip()+opts(legend.position=\"none\", axis.text.x=theme_text(colour=\"black\"))+labs(x=\"\", y=\"\")+scale_y_continuous(breaks=c(-2,2))\n\tggsave(paste(finalOuts, \"RcaseStudies/box.png\", sep=\"\"),  dpi=300)\n}\n\nplot.gap.closures<-function(d){\t\n\td$delta=1-d$inv1\n\td=d[,c(\"biz\", \"delta\")]\n\tx=sort(unique(d$delta))\n\tCDFs=by(d, d$biz, function(s) ecdf(s$delta)(x))\n\td=as.data.frame(do.call(rbind, lapply(seq(CDFs), function(i) cbind(x, CDFs[[i]], i))))\n\tnames(d)<-c(\"x\", \"y\", \"biz\")\n\td$biz=factor(d$biz); levels(d$biz)<-c(\"Retail\", \"Wholesale\", \"Manufacturing\")\n\tp<-ggplot(d, aes(colour=biz, y=y, x=x))+geom_line(size=1)+coord_cartesian(xlim=c(0,1.05))+scale_colour_grey(end=0,start=0.7)+opts(panel.background = theme_rect(colour=NA), axis.text.y=theme_text(size=18), axis.text.x=theme_text(size = 18), axis.title.x=theme_text(size = 24), axis.title.y=theme_text(size = 24, angle=90))+scale_y_continuous(breaks=seq(0,1,.25))+scale_x_continuous(breaks=seq(0,1,.25))+opts(legend.position=c(.85,.75), legend.text=theme_text(size = 18))+labs(colour=\"\", y=\"CDF Across Firms\", x=\"Fraction of Gap Closed Within One Quarter\") \n\tggsave(paste(finalOuts, \"invGap/gap.png\", sep=\"\"),  dpi=300)\t\n}\n\nplot.frontier<-function(d){\t\n\td=d[,c(\"sic\", \"adh1\", \"prod\")]\n\td=d[as.logical((d$adh1<80)*(d$prod<80)),]\n\td$adh1=-d$adh1\n\td$biz=c(\"Retail\", \"Wholesale\", \"Manufacturing\")[1+(d$sic<5200)*(d$sic>=5000)+2*(d$sic<4000)]\n\td$biz=factor(d$biz, levels=c(\"Retail\", \"Wholesale\", \"Manufacturing\"))\n\tp<-ggplot(d, aes(x=adh1, y=prod))+stat_density2d(geom=\"tile\", aes(fill = ..density..), contour = FALSE)+geom_density2d(bins = 12, size = .5, colour = \"black\")+scale_fill_gradient(limit = c(0.0003, .0025), low = \"white\", high=\"darkgrey\")+scale_x_continuous(breaks=seq(-120, 120, 20))+scale_y_continuous(breaks=seq(0, 95, 5))+opts(legend.position=c(.25,.87), legend.title=theme_text(size = 0), axis.text.y=theme_text(size=15), axis.text.x=theme_text(size = 15), axis.title.x=theme_text(size = 22), axis.title.y=theme_text(size = 22, angle=90), legend.text=theme_text(size = 16), panel.background = theme_rect(colour=NA))+labs(x=expression(paste(U^o, '(', widehat(A), \",\",widehat(Sigma), \",\",widehat(Lambda), \")\")), y=expression(paste('S(', widehat(A), \",\",widehat(Sigma), \",\",widehat(Lambda), \")\")), biz=\"\")+coord_cartesian(ylim=c(0,30), xlim=c(0,-83))\n\tggsave(paste(finalOuts, \"invGap/frontier.png\", sep=\"\"),  dpi=300)\t\n}\n\nplot.Preference.Parameters<-function(){\t\n\td=alpha.beta.0; names(d)<-c(\"samp\", \"key\", \"biz\", \"sic\", \"alpha\", \"beta\")\n\tmy.jitter=.013; d$alpha=d$alpha+my.jitter; d$beta=d$beta+my.jitter; \n\td$alpha=pmin(d$alpha, 1.5-my.jitter); d$beta=pmin(d$beta, 1.5-my.jitter)\n\tp<-ggplot(d, aes(x=alpha, y=beta))+geom_point(size=1.25, alpha=1/3, position=position_jitter(w=my.jitter, h=my.jitter))+ geom_hline(aes(yintercept=quantile(beta, probs=c(.25,.5,.75))),size=.3)+ geom_vline(aes(xintercept=quantile(alpha, probs=c(.25,.5,.75))), size=.3)  +opts(legend.position=c(.25,.87), legend.title=theme_text(size = 0), axis.text.y=theme_text(size=15), axis.text.x=theme_text(size = 15), axis.title.x=theme_text(size = 24), axis.title.y=theme_text(size = 24, angle=90), legend.text=theme_text(size = 16), panel.background = theme_rect(colour=NA))+labs(x=expression(widehat(alpha)), y=expression(widehat(beta)), biz=\"\")+scale_fill_gradient(low = \"white\", high=\"darkgrey\")+scale_x_continuous(breaks=c(0,.5,1,1.5))+scale_y_continuous(breaks=c(0,.5,1,1.5))\n\tggsave(paste(finalOuts, \"preferenceParameters/pref.png\", sep=\"\"),  dpi=300)\t\n}\n\nplot.cf.bw<-function(d){\n\td$bw=d$o21-d$o11; d$bw0=d$o22-d$o12; d=d[,c(\"id.key\", \"bw\", \"bw0\")]; names(d)[1]=\"key\"\n\td=merge(d, alpha.beta.0[,c(\"key\", \"V6\")])\n\tnames(d)[4]=\"beta\"\n\td=d[d$beta<2,]\n\td=melt(d, id=c(\"key\", \"beta\"))\n\td$beta=-d$beta\n\tlevels(d$variable)<-c(expression(paste(\"B(\", A[1], \",\", Sigma[1],\",\", Lambda[1],\",\", Gamma[1], \")-B(\", A[0],\",\", Sigma[0],\",\", Lambda[0],\",\", Gamma[0], \")\")), expression(paste(B^0, \"(\", A[1],\",\", Sigma[1],\",\", Lambda[1],\",\", Gamma[1], \")-\", B^0,\"(\", A[0], \",\",Sigma[0],\",\", Lambda[0],\",\", Gamma[0], \")\")))\n\td$temp=\"\"\n\tp<-ggplot(d, aes(x=beta, y=value))+facet_grid(temp~variable, labeller = label_parsed)+geom_point(size=1, alpha=1/2)+geom_smooth(colour=\"black\")+ geom_hline(aes(yintercept=0),size=.3)+opts(panel.background=theme_rect(colour=\"lightgrey\"), legend.title=theme_text(size = 0), axis.text.y=theme_text(size=13), axis.text.x=theme_text(size = 13), axis.title.x=theme_text(size = 18),strip.text.x=theme_text(size=15), axis.title.y=theme_text(size = 20, angle=90))+labs(x=expression(paste(beta[1]-beta[0])), y=\"\")+scale_y_continuous(breaks=seq(-30, 40, 5))+coord_cartesian(ylim=c(-7,27), xlim=c(.05, -1.7))\n\tggsave(paste(finalOuts, \"cf/cf_bw.png\", sep=\"\"),  dpi=300)\t\n}\n\nplot.cf.forc<-function(d){\n\td=pmax(d, -22)\n\tp<-ggplot(d, aes(x=V1, y=V2))+geom_point(size=1) + stat_quantile(colour=\"black\") +opts(panel.background=theme_rect(colour=\"lightgrey\"), legend.title=theme_text(size = 0), axis.text.y=theme_text(size=13), axis.text.x=theme_text(size = 13), axis.title.x=theme_text(size = 20),strip.text.x=theme_text(size=17), axis.title.y=theme_text(size = 20, angle=90))+opts(panel.background=theme_rect(colour=\"lightgrey\", size=1))+scale_x_continuous(breaks=seq(-20, 0, 5))+labs(x=expression(paste(U, \"(\",Sigma[1], \")-\", U,\"(\",Sigma[0], \")\")), y=expression(paste(U^o, \"(\", A[1],\",\", Sigma[1],\",\", Lambda[1],\",\", Gamma[1], \")-\", U^o,\"(\", A[0], \",\",Sigma[0],\",\", Lambda[0],\",\", Gamma[0], \")\")))\n\tggsave(paste(finalOuts, \"cf/cf_forc.png\", sep=\"\"),  dpi=300)\t\n}\n\nplot.metric.medians<-function(t, bound, file, h.0=0, tick.length=.25){\n\tt$sic=as.factor(floor(t$sic/100))\n\tt=cast(t, ...~., median)\n\tnames(t)[which(names(t)==\"(all)\")]=\"median\"\n\ts=cast(t, sic+stat~., value=\"median\", fun.aggregate=sd)\n\tnames(s)[which(names(s)==\"(all)\")]=\"se\"\n\tt=t[t$samp==0,]\n\tt=merge(t, s)\n\tt=merge(t, get.sic.labels())\n\tt$sic.label<-factor(t$sic.label)\n\tt$u=pmin(pmax(t$median+1.64*t$se, bound[1]), bound[2])\n\tt$l=pmin(pmax(t$median-1.64*t$se, bound[1]), bound[2])\n\tt$median=pmin(pmax(t$median, bound[1]), bound[2])\n\tt$sig[t$l>h.0]<-\"Significant\"\n\tt$sig[t$l<=h.0]<-\"Insignificant\"\n\tt$sig=factor(t$sig, levels=c(\"Significant\", \"Insignificant\"))\n\tt$temp=\"\"\n\tp<-ggplot(t, aes(colour=sig, y=median, x=sic.label))\n\tlimits<-aes(ymax=u, ymin=l)\n\tp + geom_point() + geom_errorbar(limits, width=0.7)+ geom_hline(aes(yintercept=0),size=.3)+ facet_grid(temp~stat, labeller = label_parsed, scales=\"free_y\")+scale_y_continuous(breaks=seq(from=bound[1], to = bound[2], by = tick.length))+labs(x=\"\", y=\"\")+opts(panel.background=theme_rect(colour=\"lightgrey\", size=1), axis.line=theme_segment(colour=\"black\"), legend.title = theme_text(colour = \"white\"), legend.position = \"none\", axis.text.x=theme_text(colour=\"black\"), strip.text.x=theme_text(size=13), panel.background = theme_rect(colour=NA))+scale_colour_grey(end=0.7,start=0)+coord_flip(ylim=c(0,bound))\n\tggsave(paste(finalOuts, file, sep=\"\"),  dpi=300)\t\n}\n\nplot.hausman<-function(d){\t\n\td=as.data.frame(d)\n\td$R2=apply(A.0, 4, pull.R2)\n\td$p=pchisq(22, d[,2])\n\td$p=pmax(10^(-5), d$p);\n\tggplot(d, aes(x=R2, y=p))+geom_point(size=I(.8))+scale_y_log10(breaks=10^(0:-4)) +opts(axis.text.x=theme_text(colour=\"black\", size=11), axis.text.y=theme_text(colour=\"black\", size=11), axis.title.x=theme_text(size=15), axis.title.y=theme_text(size=15, angle=90), panel.background = theme_rect(colour=NA))+scale_x_continuous(breaks=seq(from=0, to = 1, by = .2))+labs(x=expression(R^2), y=\"p-value\")\n\tggsave(paste(finalOuts, \"hausman/haus.png\", sep=\"\"),  dpi=300)\n}\n\nplot.F<-function(){\n\tN=6\n\ti=complex(real=0, imaginary=1)\n\tdelta=.01\n\tw=exp(-2*pi*i/(N/delta))\n\tsines=N^(-1/2)*sapply(seq(N)-1, function(x) (w^(seq((N/delta))-1))^x)\n\td=melt(sines, varnames=c(\"m\", \"n\"))\n\td$m=(d$m-1)*delta\n\td$int=d$m==floor(d$m)\n\tr=as.data.frame(d); r$value=as.real(Re(r$value)); r$type=\"Real\"; \n\ti=as.data.frame(d); i$value=as.real(Im(i$value)); i$type=\"Imaginary\"; \n\td=rbind(r,i); d$m=as.real(d$m); d$n=as.real(d$n)\n\td$type=factor(d$type, levels=c(\"Real\", \"Imaginary\"))\n\td$n<-as.factor(d$n)\n\tlevels(d$n)<-c('n==0', 'n==1', 'n==2', 'n==3', 'n==4', 'n==5', 'n==6', 'n==7')\n\td$temp=\"\"\n\tp<-ggplot(d, aes(x=m, y=value, colour=type, size=int)) +geom_point() +facet_grid(n~temp, labeller = label_parsed)+opts(legend.title = theme_text(size = 0))+ scale_y_continuous(expression(paste(mn^\"th\", \" element of W\")), breaks=seq(-1,1,.2))+opts(axis.text.y=theme_text(size=10), axis.text.x=theme_text(size = 11), strip.text.y=theme_text(size = 15, angle=-90), strip.text.x=theme_text(size = 15), axis.title.x=theme_text(size = 16), axis.title.y=theme_text(size = 16, angle=90), legend.text=theme_text(size = 13), panel.background=theme_rect(colour=\"lightgrey\"))+scale_colour_grey(end=0.8,start=0)\n\tggsave(paste(finalOuts, \"impulse_responses/fourier.png\", sep=\"\"),  dpi=300)\n}\n\nget.sic.labels<-function(){\n\tlevels=c('Hardware and garden (R)',\n\t\t'General merchandise (R)',\n\t\t'Food (R)',\n\t\t'Automotive dealers (R)',\n\t\t'Apparel and accessory (R)',\n\t\t'Homefurnishings (R)',\n\t\t'Restaurants (R)',\n\t\t'Miscellaneous (R)',\n\t\t'Durable goods (W)',\n\t\t'Nondurable goods (W)'\t,\n\t\t'Tobacco (M)',\n\t\t'Textile mill (M)',\n\t\t'Apparel (M)',\n\t\t'Lumber and wood (M)',\n\t\t'Furniture and fixtures (M)',\n\t\t'Paper (M)',\n\t\t'Printing and publishing (M)',\n\t\t'Chemicals (M)',\n\t\t'Petroleum and coal (M)',\n\t\t'Rubber and plastics (M)',\n\t\t'Leather goods (M)',\n\t\t'Stone and glass (M)',\n\t\t'Primary metal (M)',\n\t\t'Fabricated metal (M)',\n\t\t'Industrial machinery (M)',\n\t\t'Electronic  equipment (M)',\n\t\t'Transportation equipment (M)',\n\t\t'Instruments and related (M)',\n\t\t'Miscellaneous (M)')\n\to=data.frame(sic=c(52:59, 50:51, 21:39), sic.label=levels)\n\tlevels(o$sic.label)=levels[length(levels):1]\n\to\n}\n\n####Old###\nplot.counterfactual<-function(m, append=\"\"){\t\n\tnames(m)[1]<-\"sic\"\n\tm=melt(m, id.var='sic')\n\tm=m[m$variable%in%c(\"adh\", \"stock\", \"lead0\", \"inv\", \"prod\", \"sinv\"),]\n\tm$variable<-factor(m$variable, levels=c(\"adh\", \"stock\", \"lead0\", \"inv\", \"prod\", \"sinv\"))\n\tm$sic=as.factor(floor(m$sic/100))\n\tm=wins(m, \"value\", c(\"sic\", \"variable\"), q=c(.1, .9))\n\tm=wins(m, \"value\", c(\"variable\"), q=c(.05, .95))\n\tm=normalize(m, INDICIES=m$variable)\n\tm$value=m$value+(m$tick<0)\t\n\tprint(multicol.unique(m, c(2,4)))\n\tlevels(m$variable)<-c('Adherence', 'Stock Var', 'Lead-0 BW', 'Inv. Exceed', 'Order Exceed', \"Supplier Inv.\")\n\tf<-function(x) {\n\t\tr<-quantile(x, probs = c(0.1, 0.25, 0.5, 0.75, 0.9))\n\t\tnames(r)<-c(\"ymin\", \"lower\", \"middle\", \"upper\", \"ymax\")\n\t\tr\n\t}\n\tm$temp=\"\"\n\tm=merge(m, get.sic.labels())\n\tggplot(m, aes(x=sic.label, y=value)) + stat_summary(fun.data = f, geom=\"boxplot\")+ facet_grid(temp~variable, scales=\"free\") +coord_flip()+opts(legend.position=\"none\", axis.text.x=theme_text(colour=\"black\"))+labs(x=\"\", y=\"\")+scale_y_continuous(breaks=c(0,1))+opts(strip.text.x=theme_text(size=8.5))\n\tggsave(paste(finalOuts, \"RcaseStudies/counterfactual\", append, \".png\", sep=\"\"),  dpi=300)\n}\n\nplot.theta<-function(mle, f.0){\n\tx=seq(.0005, .95, .001)\n\tu=1; \n\td1=mle[mle$samp==0,-which(names(mle)==\"samp\")]\n\td1=do.call(rbind, lapply(seq(dim(d1)[1]), function(i) cbind(d1[i, 1:2], x, plnorm(x, d1[i, \"m\"], d1[i, \"s\"]))))\n\tnames(d1)<-c(\"sic\", \"theta\", \"x\", \"y\")\n\td2=do.call(rbind, lapply(f.0, function(x) c(x$sic, x$theta[1:3])))\n\tfindCDF<-function(col) do.call(rbind, lapply(1:3, function(i) cbind(i, col-2, x, ecdf(d2[d2[,1]==i, col])(x))))\n\td2=as.data.frame(do.call(rbind, lapply(2:4, findCDF)))\n\tnames(d2)<-names(d1)\n\td1$est<-\"MLE\"; d2$est<-\"GMM\"\n\td=rbind(d1, d2)\n\td$theta=factor(d$theta)\n\tlevels(d$theta)<-c(expression(theta), expression(theta[1]), expression(theta[2]))\n\td$sic=factor(d$sic)\n\tlevels(d$sic)<-c(\"Retail\", \"Wholesale\", \"Manufacturing\")\n\tp<-ggplot(d, aes(colour=est, y=y, x=x))\n\tlimits<-aes(ymax=u)\n\tp + geom_line()+facet_grid(theta~sic, labeller = label_parsed, scales=\"free_y\")+coord_cartesian(xlim=c(0,.5), ylim=c(0,1))+labs(x=\"\", y=\"\")+scale_colour_grey(end=0,start=0.7)+opts(panel.background = theme_rect(colour=NA), axis.text.y=theme_text(size=10, face=\"bold\"), axis.text.x=theme_text(size = 11, face=\"bold\"), strip.text.y=theme_text(size = 13), strip.text.x=theme_text(size = 13), axis.title.x=theme_text(size = 16), axis.title.y=theme_text(size = 16, angle=90))+scale_y_continuous(breaks=seq(.2,1,.2))+scale_x_continuous(breaks=seq(.1,.4,.1))+labs(colour=\"Estimator\", y=expression(CDF), x=\"Newsvendor Ratio Value\") \n\tggsave(paste(finalOuts, \"theta/theta_MLE_plot.png\", sep=\"\"),  dpi=300)\n}\n\nplot.newspapers<-function(){\n\tmy.jitter=.04\n\tind=c(3674, 3823:3841, 2711:2721, 5411)\n\td=alpha.beta.0[alpha.beta.0$V4%in%ind, c(\"V4\", \"V5\", \"V6\")]; \n\td$V5=d$V5+my.jitter; d$V6=d$V6+my.jitter;\n\td$Industry=factor(c(\"Newspapers/Magazine Publishing\", \"Grocery Retailing\", \"Semiconductor Manufacturing\", \"Instruments Manufacturing\")[1+(d$V4%in%5411)+2*(d$V4%in%3674)+3*(d$V4%in%3823:3841)], levels=c(\"Semiconductor Manufacturing\", \"Instruments Manufacturing\", \"Newspapers/Magazine Publishing\", \"Grocery Retailing\"))\n\td$V5=pmin(1.05, d$V5); d$V6=pmin(.8, d$V6);\n\tp<-ggplot(d, aes(y=V6, x=V5))\n\tp+geom_point(size=1.25, position=position_jitter(w=my.jitter, h=my.jitter))+facet_wrap(~Industry, nrow=2)+scale_colour_grey()+labs(x=expression(widehat(alpha)),y=expression(widehat(beta)))+scale_x_continuous(breaks=seq(0,1,.2))+scale_y_continuous(breaks=seq(0,.8,.2))+opts(panel.background=theme_rect(colour=\"lightgrey\"), panel.background = theme_rect(colour=NA), axis.text.y=theme_text(size=10, face=\"bold\"), axis.text.x=theme_text(size = 11, face=\"bold\"), strip.text.y=theme_text(size = 13), strip.text.x=theme_text(size = 13), axis.title.x=theme_text(size = 18), axis.title.y=theme_text(size = 18))\n\tggsave(paste(finalOuts, \"theta/newspapers.png\", sep=\"\"),  dpi=300)\n}\n\nplot.theory.policies<-function(H, margins, strip.labels, range = 5^c(-2:2)){\n#margins is two numbers telling which two variables are \"turned on\". The first four numbers relate to a's and the rest to b's.\n\tS=diag(H+1); Lambda=matrix(0, H+1, H+1); Gamma=Lambda; L=0\n\tx=expand.grid(range, range)\n\tcases=matrix(0, dim(x)[1], max(c(margins, 5)))\n\tcases[,margins[1]]=x[,1]\n\tcases[,margins[2]]=x[,2]\n\tcalc.A<-function(x){\n\t\tA=solve.for.A(list(alpha=x[1:4], beta=x[5:length(x)], Sigma=S, Lambda=Lambda, Gamma=Gamma, L=L))$A\n\t\tcbind(rbind(x), melt(A))\n\t}\n\td=adply(cases, 1, calc.A)\n\td=d[,c(margins, (dim(d)[2]-2):dim(d)[2])]\n\tnames(d)[which(names(d)%in%c(\"X1\", \"X2\"))]<-c(\"m\", \"n\")\n\td$n=factor(d$n); \n\tnames(d)[1:2]=c(\"m1\", \"m2\")\t\t\n\td$m1<-as.factor(d$m1); d$m2<-as.factor(d$m2); \t\t\n\tlevels(d$m1)<-strip.labels[[1]]\n\tlevels(d$m2)<-strip.labels[[2]]\n\tp<-ggplot(d, aes(x=m, y=value, colour=n)) +geom_line(size=.25)+facet_grid(m1~m2, labeller = label_parsed, scales=\"free\")+ labs(y=expression(paste(e[m], \"'\", A, e[n])), x=\"m\")+opts(axis.text.y=theme_text(size=11), axis.text.x=theme_text(size = 11), strip.text.y=theme_text(size = 15, angle=-90), strip.text.x=theme_text(size = 15), axis.title.x=theme_text(size = 18), axis.title.y=theme_text(size = 18, angle=90), legend.text=theme_text(size = 15),legend.title=theme_text(size = 18), panel.background=theme_rect(colour=\"lightgrey\"))+scale_colour_grey(end=0.9,start=0)+scale_x_continuous(breaks=seq(0,15,2))\n\tggsave(paste(finalOuts, \"theoryPics/theory\", paste(margins, collapse = ''), \".png\", sep=\"\"),  dpi=300)\n}\n\nplot.mc<-function(trials, graph.name, which.alpha, which.beta){\n  d=ldply(trials, function(x){\n    load(paste(varSave, 'simPanel', x, '.txt', sep=\"\"))\n    load(paste(varSave, 'simEst', x, '.txt', sep=\"\"))\n    p=unique(d[,names(d)==\"cid\"| substr(names(d), 1, 5)==\"alpha\"|substr(names(d), 1, 4)==\"beta\"])\n    e=ldply(o, function(x){\n      if(attributes(x)[1]==\"try-error\") return() #exit if Sigma isn't singular\n      o=cbind(x$firm, rbind(x$alpha), rbind(x$beta))\n      colnames(o)<-c(\"samp\", \"cid\", paste(\"alpha_\", which.alpha, sep=\"\"), paste(\"beta_\", which.beta, sep=\"\"))\n      o\n    })\n    s=ddply(e[,-which(names(e)==\"samp\")], \"cid\", function(x) sd(x)[2:dim(x)[2]])\n    e=e[e$samp==0,-which(names(e)==\"samp\")]\n    names(p)[2:dim(p)[2]]<-paste(names(p)[2:dim(p)[2]], \"_p\", sep=\"\")\n    names(e)[2:dim(e)[2]]<-paste(names(e)[2:dim(e)[2]], \"_e\", sep=\"\")\n    names(s)[2:dim(s)[2]]<-paste(names(s)[2:dim(s)[2]], \"_s\", sep=\"\")\n    a=merge(p, merge(e, s))\n    a=melt(a, id=\"cid\")\n    a$var=as.factor(paste(substr(a$variable, 1,1), substr(a$variable, regexpr(\"_\", a$variable)+1, regexpr(\"_\", a$variable)+1), sep=\"\"))\n    a$var<-factor(a$var, levels=c(paste(\"a\", which.alpha, sep=\"\"), paste(\"b\", which.beta, sep=\"\")))\n    levels(a$var)<-c(laply(which.alpha, function(x) paste(\"alpha[\", x, \"]\", sep=\"\")), laply(which.beta, function(x) paste(\"beta[\", x, \"]\", sep=\"\")))\n    a$t=substr(a$variable, nchar(as.character(a$variable)), nchar(as.character(a$variable)))\n    a=a[,-which(names(a)==c(\"variable\"))]\n    a=cast(a, cid+var~t)\n    a$u=a$e+1.96*a$s\n    a$l=a$e-1.96*a$s\n    a$c=a$p<a$u & a$p>a$l\n    a$num.obs=x\n    a\n  })\n  d$N=paste(\"T==\", d$num.obs, sep=\"\")\n  d$N<-factor(d$N, levels=paste(\"T==\", unique(d$num.obs)[order(unique(d$num.obs))], sep=\"\"))\n\tggplot(d,aes(y=e,x=p,colour=c))+geom_point()+geom_errorbar(aes(max=u,ymin=l))+geom_abline(intercept=0,slope=1)+facet_grid(var~N,labeller=label_parsed)+scale_colour_grey(end=0.7,start=0)+labs(x=\"Parameter\", y=\"Estimate\")+coord_cartesian(ylim=c(-.025,1.32), xlim=c(-.05, 1.05))+scale_x_continuous(breaks=seq(0, 1, .25))+scale_y_continuous(breaks=seq(0, 1.25, .25))+opts(panel.background=theme_rect(colour=\"lightgrey\"), panel.background = theme_rect(colour=NA), legend.position = \"none\", strip.text.y=theme_text(size=12), strip.text.x=theme_text(size=12), axis.title.x=theme_text(size = 14), axis.title.y=theme_text(size = 14, angle=90), axis.text.y=theme_text(size=10), axis.text.x=theme_text(size = 10))\n\tggsave(paste(finalOuts, \"mc/\", graph.name, \".png\", sep=\"\"),  dpi=300)\t\n}",
    "created" : 1338329516736.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1630435513",
    "id" : "6F5B66EE",
    "lastKnownWriteTime" : 1338332890,
    "path" : "/Volumes/d1/code/getA/R/modules/make_plots.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}